{"version":3,"sources":["webpack:///./src/app/projectform/projectform.module.ts","webpack:///./src/app/projectform/projectform.page.html","webpack:///./src/app/projectform/projectform.page.scss","webpack:///./src/app/projectform/projectform.page.ts"],"names":[],"mappings":"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","file":"projectform-projectform-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProjectformPage } from './projectform.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProjectformPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ProjectformPage]\r\n})\r\nexport class ProjectformPageModule {}\r\n","module.exports = \"\\r\\n<ion-content padding>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col s12 m4\\\">\\r\\n      <form (ngSubmit)=\\\"onSubmit(projectForm)\\\" #projectForm=\\\"ngForm\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row justify-content-center>\\r\\n            <ion-col align-self-center size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\r\\n              <div text-center>                  \\r\\n                <h4>Форма проекта </h4>\\r\\n              </div>\\r\\n              <div padding>\\r\\n                <input type=\\\"hidden\\\" name=\\\"ID\\\" #ID=\\\"ngModel\\\" [(ngModel)]=\\\"projectService.selectedProject.id\\\">\\r\\n                <ion-item>\\r\\n                  <ion-input type=\\\"text\\\" #name ngModel name=\\\"name\\\" [(ngModel)]=\\\"projectService.selectedProject.name\\\"\\r\\n                    placeholder=\\\"Название\\\" required></ion-input>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                  <ion-datetime #startDate ngModel name=\\\"startDate\\\" placeholder=\\\"Начало\\\"\\r\\n                    [(ngModel)]=\\\"projectService.selectedProject.startDate\\\" display-format=\\\"DD/MM/YYYY\\\"\\r\\n                    picker-format=\\\"DD MM YYYY\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-datetime #endDate ngModel name=\\\"endDate\\\" placeholder=\\\"Конец\\\"\\r\\n                    [(ngModel)]=\\\"projectService.selectedProject.endDate\\\" display-format=\\\"DD/MM/YYYY\\\"\\r\\n                    picker-format=\\\"DD MM YYYY\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-textarea #description ngModel name=\\\"description\\\"\\r\\n                    [(ngModel)]=\\\"projectService.selectedProject.description\\\" placeholder=\\\"Описание\\\" required>\\r\\n                  </ion-textarea>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Выберите спринты</ion-label>\\r\\n                  <ion-select #sprints ngModel name=\\\"sprints\\\" [(ngModel)]=\\\"projectService.selectedProject.sprints\\\"\\r\\n                    multiple=\\\"true\\\" [compareWith]=\\\"compareFn\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let sprint of sprintService.sprintsList\\\" [value]=\\\"sprint\\\">\\r\\n                      {{sprint.name}}\\r\\n                    </ion-select-option>\\r\\n                  </ion-select>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Выберите теги</ion-label>\\r\\n                  <ion-select #tags ngModel name=\\\"tags\\\" [(ngModel)]=\\\"projectService.selectedProject.tags\\\"\\r\\n                    multiple=\\\"true\\\" [compareWith]=\\\"compareFn\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let tag of tagService.tagsList\\\" [value]=\\\"tag\\\">\\r\\n                      {{tag.name}}\\r\\n                    </ion-select-option>\\r\\n                  </ion-select>\\r\\n                </ion-item>\\r\\n              </div>\\r\\n              <div padding>\\r\\n                <ion-button color=\\\"light\\\" size=\\\"default\\\" type=\\\"submit\\\" expand=\\\"block\\\">Сохранить</ion-button>\\r\\n                <ion-button color=\\\"dark\\\" size=\\\"default\\\" type=\\\"button\\\" expand=\\\"block\\\" (click)=\\\"resetForm(projectForm)\\\">\\r\\n                  Сбросить\\r\\n                </ion-button>\\r\\n              </div>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2plY3Rmb3JtL3Byb2plY3Rmb3JtLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectService } from '../shared/project.service';\r\nimport { SprintService } from '../shared/sprint.service';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { TagService } from '../shared/tag.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-projectform',\r\n  templateUrl: './projectform.page.html',\r\n  styleUrls: ['./projectform.page.scss'],\r\n})\r\nexport class ProjectformPage implements OnInit {\r\n\r\n  constructor(public projectService: ProjectService,\r\n    public sprintService: SprintService,\r\n    public tagService: TagService,\r\n    public toastController: ToastController,\r\n    private router : Router) { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  async presentToast(text, theme) {\r\n    const toast = await this.toastController.create({\r\n      message: text,\r\n      showCloseButton: true,\r\n      duration: 2000,\r\n      position: 'top',\r\n      closeButtonText: 'Done',\r\n      color: theme\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  compareFn(e1, e2): boolean {\r\n    return e1 && e2 ? e1.id === e2.id : e1 === e2;\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    if (form.value.ID == null) {\r\n      this.projectService.postProject(form.value).subscribe(data => {\r\n        this.resetForm(form);\r\n        this.projectService.getAllProjects();\r\n        this.projectService.updateSelectedProject();\r\n        this.router.navigate([`/project/${this.projectService.projectId}`]);\r\n        this.presentToast('project created!', 'success');\r\n      })\r\n    }\r\n    else {\r\n      this.projectService.putProject(form.value.ID, form.value).subscribe(data => {\r\n        this.projectService.updateSelectedProject(); \r\n        this.resetForm(form);\r\n        this.projectService.getAllProjects();            \r\n        this.router.navigateByUrl(`/project/${this.projectService.projectId}`);   \r\n        this.presentToast('project updated!', 'success');\r\n      })\r\n    }\r\n  }\r\n\r\n  resetForm(form?: NgForm) {\r\n    if (form != null) {\r\n      form.reset();\r\n    }\r\n    this.projectService.selectedProject = {\r\n      id: null,\r\n      name: '',\r\n      description: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      sprints : [],\r\n      tags : []\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}