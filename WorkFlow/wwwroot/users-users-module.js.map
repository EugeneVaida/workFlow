{"version":3,"sources":["webpack:///./src/app/users/users.module.ts","webpack:///./src/app/users/users.page.html","webpack:///./src/app/users/users.page.scss","webpack:///./src/app/users/users.page.ts"],"names":[],"mappings":"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","file":"users-users-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { UsersPage } from './users.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UsersPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [UsersPage]\r\n})\r\nexport class UsersPageModule {}\r\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title><span class=\\\"blue\\\">User manager</span></ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding >\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s12 m4\\\">\\n      <form (ngSubmit)=\\\"onSubmit(userForm)\\\" #userForm=\\\"ngForm\\\">\\n        <ion-grid>\\n          <ion-row justify-content-center>\\n            <ion-col align-self-center size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">                             \\n              <h4>User form </h4>              \\n              <div padding>\\n                <input type=\\\"hidden\\\" name=\\\"id\\\" #id=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.id\\\">\\n                <ion-item>\\n                  <ion-input type=\\\"text\\\" #username ngModel name=\\\"username\\\" [(ngModel)]=\\\"userService.selectedUser.username\\\"\\n                    placeholder=\\\"Имя пользователя\\\" required></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-input type=\\\"password\\\" #password ngModel name=\\\"password\\\" [(ngModel)]=\\\"userService.selectedUser.password\\\"\\n                    placeholder=\\\"Пароль\\\" required></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-input type=\\\"email\\\" #email ngModel name=\\\"email\\\" [(ngModel)]=\\\"userService.selectedUser.email\\\"\\n                    placeholder=\\\"Email\\\" required></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-input type=\\\"text\\\" #firstname ngModel name=\\\"firstname\\\" [(ngModel)]=\\\"userService.selectedUser.firstname\\\"\\n                    placeholder=\\\"Имя\\\" required></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-input type=\\\"text\\\" #lastname ngModel name=\\\"lastname\\\" [(ngModel)]=\\\"userService.selectedUser.lastname\\\"\\n                    placeholder=\\\"Фамилия\\\" required></ion-input>\\n                </ion-item>              \\n\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\">Выберите роль</ion-label>\\n                  <ion-select #roles ngModel name=\\\"roles\\\" [(ngModel)]=\\\"userService.selectedUser.roles\\\"\\n                    multiple=\\\"true\\\" [compareWith]=\\\"compareFn\\\">\\n                    <ion-select-option *ngFor=\\\"let role of userService.rolesList\\\" [value]=\\\"role\\\">\\n                      {{role.name}}\\n                    </ion-select-option>\\n                  </ion-select>\\n                </ion-item>                \\n              </div>\\n              <div padding>\\n                <ion-button color=\\\"light\\\" size=\\\"default\\\" type=\\\"submit\\\" expand=\\\"block\\\">Create</ion-button>\\n                <ion-button color=\\\"dark\\\" size=\\\"default\\\" type=\\\"button\\\" expand=\\\"block\\\" (click)=\\\"resetForm(projectForm)\\\">\\n                  Reset\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </form>\\n    </div>\\n  </div>\\n  <ion-row justify-content-center>\\n    <ion-col align-self-center size-md=\\\"4\\\" size-lg=\\\"4\\\" size-xs=\\\"12\\\">\\n      <div *ngFor=\\\"let user of userService.usersList\\\">\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title>{{ user.username }}</ion-card-title>\\n            <ion-card-subtitle>\\n              {{ user.firstname }} - {{ user.lastname }}\\n            </ion-card-subtitle>\\n          </ion-card-header>\\n\\n          <ion-card-content> \\n            <div *ngFor=\\\"let role of user.roles\\\">\\n              <ion-chip [routerLink]=\\\"'/tag-projects/' + role.Id\\\" color=\\\"tertiary\\\">\\n                <ion-label  color=\\\"tertiary\\\">{{ role.name }}</ion-label>\\n              </ion-chip>\\n            </div>\\n          </ion-card-content>\\n          <ion-item>\\n            <ion-button color=\\\"medium\\\" (click)=\\\"onDelete(user.id)\\\">\\n              <ion-ripple-effect></ion-ripple-effect>\\n              <ion-icon name=\\\"trash\\\" slot=\\\"start\\\"></ion-icon>\\n              Remove\\n            </ion-button>\\n            <ion-button color=\\\"light\\\" (click)=\\\"showForEdit(user)\\\">\\n              <ion-ripple-effect></ion-ripple-effect>\\n              <ion-icon name=\\\"create\\\" slot=\\\"start\\\"></ion-icon>\\n              Edit\\n            </ion-button>\\n          </ion-item>\\n        </ion-card>\\n      </div>\\n    </ion-col>\\n  </ion-row>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserService } from '../shared/user.service';\nimport { User } from '../shared/user.model';\nimport { ToastController } from '@ionic/angular';\nimport { NgForm } from '@angular/forms';\nimport { IonContent } from '@ionic/angular';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.page.html',\n  styleUrls: ['./users.page.scss'],\n})\nexport class UsersPage implements OnInit {\n  @ViewChild(IonContent) content: IonContent;\n  constructor( \n    public userService : UserService,\n    private toastController : ToastController\n  ) { }\n\n  ngOnInit() {\n    this.userService.getAllUsers(); \n    this.userService.getRoles();\n    this.resetForm();\n  }\n\n  async presentToast(text, theme) {\n    const toast = await this.toastController.create({\n      message: text,\n      showCloseButton: true,\n      position: 'top',\n      closeButtonText: 'Done',\n      color: theme\n    });\n    toast.present();\n  }\n\n  isMatch(array){\n    return this.userService.roleMatch(array);\n  }\n\n  showForEdit(us: User) {\n    console.log(us);\n    this.userService.selectedUser = Object.assign({}, us);    \n    this.ScrollToTop();\n  }\n\n  ScrollToTop(){\n    this.content.scrollToTop(800);\n  }\n\n  onDelete(id: number) {\n    if (confirm('Are you sure to delete this record ?') == true) {\n      this.userService.deleteUser(id)\n        .subscribe(x => {\n          this.userService.getAllUsers();\n          this.presentToast('User deleted!', 'danger');\n        })\n    }\n  }\n\n    \n  compareFn(e1, e2): boolean {\n    return e1 && e2 ? e1.id === e2.id : e1 === e2;\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.reset();\n    }\n    this.userService.selectedUser = {\n      id: null,\n      username: '',\n      password: '',\n      email: '',\n      firstname: '',\n      lastname: '',\n      roles : []\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value.id == null) {\n      this.userService.postUser(form.value).subscribe(data => {\n        this.resetForm(form);\n        this.userService.getAllUsers();\n        // this.toast.show(`New company add!`, '5000', 'center').subscribe(\n        //   toast => {\n        //     console.log(toast);\n        //   }\n        // );\n        this.presentToast('user created!', 'success');\n      })\n    }\n    else {\n      this.userService.putUser(form.value.id, form.value).subscribe(data => {\n        this.resetForm(form);\n        this.userService.getAllUsers();\n        // this.toast.show(`Companies updated`, '5000', 'center').subscribe(\n        //   toast => {\n        //     this.presentToast('Project updated!', 'warning');\n        //   }\n        // );\n        this.presentToast('project updated!', 'success');\n      })\n    }\n  }\n\n}\n"],"sourceRoot":""}