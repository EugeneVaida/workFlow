{"version":3,"sources":["webpack:///./src/app/sprints/sprints.module.ts","webpack:///./src/app/sprints/sprints.page.html","webpack:///./src/app/sprints/sprints.page.scss","webpack:///./src/app/sprints/sprints.page.ts"],"names":[],"mappings":"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","file":"sprints-sprints-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SprintsPage } from './sprints.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SprintsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SprintsPage]\n})\nexport class SprintsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title><span class=\\\"blue\\\">Спринты</span></ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n    <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\" edge slot=\\\"fixed\\\" (click)=\\\"createNew()\\\">\\n        <ion-fab-button>\\n          <ion-icon name=\\\"add\\\"></ion-icon>\\n        </ion-fab-button>\\n      </ion-fab>\\n  <ion-grid>\\n    <ion-row justify-content-center>\\n      <ion-col align-self-center size-md=\\\"4\\\" size-lg=\\\"4\\\" size-xs=\\\"12\\\"\\n      *ngFor=\\\"let sprint of sprintService.sprintsList\\\">\\n        <div >\\n          <ion-card color=\\\"light shade\\\">\\n            <ion-card-header>\\n              <ion-card-title>\\n                {{ sprint.name }}\\n                <ion-icon *ngIf=\\\"sprint.isDone\\\" color=\\\"success\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n              </ion-card-title>\\n              <ion-card-subtitle>\\n                {{ sprint.startDate | date: \\\"dd/MM/yyyy\\\"}} - {{ sprint.endDate | date: \\\"dd/MM/yyyy\\\"}}\\n              </ion-card-subtitle>\\n            </ion-card-header>\\n            <ion-card-content>\\n              <span *ngFor=\\\"let project of sprint.projects\\\">\\n                <ion-chip [routerLink]=\\\"'/project/' + project.id\\\">\\n                  <ion-label>{{ project.name }}</ion-label>\\n                </ion-chip>\\n              </span>\\n              <br>\\n              <ion-button color=\\\"primary\\\" [routerLink]=\\\"'/sprint/' + sprint.id\\\">\\n                <ion-ripple-effect></ion-ripple-effect>\\n                <ion-icon name=\\\"arrow-forward\\\" slot=\\\"start\\\"></ion-icon>\\n                Открыть\\n              </ion-button>\\n            </ion-card-content>\\n          </ion-card>\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NwcmludHMvc3ByaW50cy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SprintService } from '../shared/sprint.service';\nimport { ProjectService } from '../shared/project.service';\nimport { ToastController, IonContent } from '@ionic/angular';\nimport { NgForm } from '@angular/forms';\nimport { Sprint } from '../shared/sprint.model';\nimport { Project } from '../shared/project.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sprints',\n  templateUrl: './sprints.page.html',\n  styleUrls: ['./sprints.page.scss']\n})\nexport class SprintsPage implements OnInit {\n  @ViewChild(IonContent) content: IonContent;\n  public allProjects: Project[];\n  constructor(\n    public sprintService: SprintService,\n    public projectService: ProjectService,\n    public toastController: ToastController,\n    private router: Router\n  ) {\n\n  }\n\n  async presentToast(text, theme) {\n    const toast = await this.toastController.create({\n      message: text,\n      showCloseButton: true,\n      position: 'top',\n      closeButtonText: 'Done',\n      color: theme\n    });\n    toast.present();\n  }\n\n  ngOnInit() {\n    this.sprintService.getAllSprints();\n    this.projectService.getAllProjects();\n  }   \n\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.reset();\n    }\n    this.sprintService.selectedSprint = {\n      id: null,\n      name: '',\n      description: '',\n      startDate: '',\n      endDate: '',\n      percent: 0,\n      priority: 0,\n      isDone: false,\n      projects: []\n    }\n  }\n\n  createNew(){\n    this.sprintService.selectedSprint = {\n      id: null,\n      name: '',\n      description: '',\n      startDate: '',\n      endDate: '',\n      percent: 0,\n      priority: 0,\n      isDone: false,\n      projects: []\n    };\n    this.router.navigate(['/sprintform']); \n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value.ID == null) {\n      this.sprintService.postSprint(form.value).subscribe(data => {\n        this.resetForm(form);\n        this.sprintService.getAllSprints();\n        this.projectService.getAllProjects();\n        this.presentToast('Sprint created!', 'success');\n      })\n    }\n    else {\n      this.sprintService.putSprint(form.value.ID, form.value).subscribe(data => {\n        this.resetForm(form);\n        this.sprintService.getAllSprints();\n        this.projectService.getAllProjects();\n        this.presentToast('Sprint updated!', 'success');\n      })\n    }\n  }\n\n  compareFn(e1: Project, e2: Project): boolean {\n    return e1 && e2 ? e1.id === e2.id : e1 === e2;\n  }\n\n  multiChange() {\n    console.table(this.sprintService.selectedSprint.projects);\n  };\n\n  containsObject(obj: Project, list: Project[]) {\n    //console.log(`enter values ${obj} - ${list}`);\n    let project = Object.assign({}, obj);\n    let list1 = Object.assign({}, list);\n    let i;\n    for (i = 0; i < list1.length; i++) {\n      if (list[i] === project) {\n        console.log(true);\n        return \"true\";\n      }\n    }\n\n    return \"false\";\n  }\n\n}\n"],"sourceRoot":""}