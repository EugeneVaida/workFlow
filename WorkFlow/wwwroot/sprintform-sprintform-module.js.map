{"version":3,"sources":["webpack:///./src/app/sprintform/sprintform.module.ts","webpack:///./src/app/sprintform/sprintform.page.html","webpack:///./src/app/sprintform/sprintform.page.scss","webpack:///./src/app/sprintform/sprintform.page.ts"],"names":[],"mappings":"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","file":"sprintform-sprintform-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SprintformPage } from './sprintform.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SprintformPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SprintformPage]\n})\nexport class SprintformPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title class=\\\"blue\\\">Форма спринта</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col s12 m4\\\">\\n          <form (ngSubmit)=\\\"onSubmit(sprintForm)\\\" #sprintForm=\\\"ngForm\\\">\\n            <ion-grid>\\n              <ion-row justify-content-center>\\n                <ion-col align-self-center size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n                  <div text-center>\\n                    <h4>Форма спринта</h4>\\n                  </div>\\n                  <div padding>\\n                    <input type=\\\"hidden\\\" name=\\\"ID\\\" #ID=\\\"ngModel\\\" [(ngModel)]=\\\"sprintService.selectedSprint.id\\\">                    \\n                    <ion-item>\\n                      <ion-input type=\\\"text\\\" #name ngModel name=\\\"name\\\" [(ngModel)]=\\\"sprintService.selectedSprint.name\\\"\\n                        placeholder=\\\"Название\\\" required></ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                      <ion-datetime #startDate ngModel name=\\\"startDate\\\" placeholder=\\\"Начало\\\"\\n                        [(ngModel)]=\\\"sprintService.selectedSprint.startDate\\\" display-format=\\\"DD/MM/YYYY\\\"\\n                        picker-format=\\\"DD MM YYYY\\\"></ion-datetime>\\n                    </ion-item>\\n    \\n                    <ion-item>\\n                      <ion-datetime #endDate ngModel name=\\\"endDate\\\" placeholder=\\\"Конец\\\"\\n                        [(ngModel)]=\\\"sprintService.selectedSprint.endDate\\\" display-format=\\\"DD/MM/YYYY\\\"\\n                        picker-format=\\\"DD MM YYYY\\\"></ion-datetime>\\n                    </ion-item>\\n    \\n                    <ion-item>\\n                      <ion-input type=\\\"text\\\" #description ngModel name=\\\"description\\\"\\n                        [(ngModel)]=\\\"sprintService.selectedSprint.description\\\" placeholder=\\\"Описание\\\" required></ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                      <ion-select #priority ngModel name=\\\"priority\\\" [(ngModel)]=\\\"sprintService.selectedSprint.priority\\\"\\n                        placeholder=\\\"\\\">\\n                        <ion-select-option [value]=1>Высокий</ion-select-option>\\n                        <ion-select-option [value]=2>Низкий</ion-select-option>\\n                      </ion-select>\\n                    </ion-item>\\n                    <ion-item>                      \\n                      <ion-select #projects ngModel name=\\\"projects\\\" [(ngModel)]=\\\"sprintService.selectedSprint.projects\\\"\\n                        multiple=\\\"true\\\" [compareWith]=\\\"compareFn\\\">\\n                        <ion-select-option *ngFor=\\\"let project of projectService.projectsList\\\" [value]=\\\"project\\\">\\n                          {{project.name}}\\n                        </ion-select-option>\\n                      </ion-select>\\n                    </ion-item>\\n                  </div>\\n                  <div padding>\\n                    <ion-button color=\\\"light\\\" size=\\\"default\\\" type=\\\"submit\\\" expand=\\\"block\\\">Сохранить</ion-button>\\n                    <ion-button color=\\\"dark\\\" size=\\\"default\\\" type=\\\"button\\\" expand=\\\"block\\\" (click)=\\\"resetForm(sprintForm)\\\">\\n                      Сбросить\\n                    </ion-button>\\n                  </div>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </form>\\n        </div>\\n      </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NwcmludGZvcm0vc3ByaW50Zm9ybS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ProjectService } from '../shared/project.service';\nimport { SprintService } from '../shared/sprint.service';\nimport { ToastController } from '@ionic/angular';\nimport { TagService } from '../shared/tag.service';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sprintform',\n  templateUrl: './sprintform.page.html',\n  styleUrls: ['./sprintform.page.scss'],\n})\nexport class SprintformPage implements OnInit {\n\n  constructor(public projectService: ProjectService,\n    public sprintService: SprintService,\n    public tagService: TagService,\n    public toastController: ToastController,\n    private router : Router) { }\n\n  ngOnInit() {\n    \n  }\n\n  async presentToast(text, theme) {\n    const toast = await this.toastController.create({\n      message: text,\n      showCloseButton: true,\n      position: 'top',\n      closeButtonText: 'Done',\n      color: theme\n    });\n    toast.present();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.reset();\n    }\n    this.sprintService.selectedSprint = {\n      id: null,\n      name: '',\n      description: '',\n      startDate: '',\n      endDate: '',\n      percent: 0,\n      priority: 0,\n      isDone: false,\n      projects: []\n    }\n\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value.ID == null) {\n      this.sprintService.postSprint(form.value).subscribe(data => {\n        this.resetForm(form);\n        this.sprintService.getAllSprints();\n        this.projectService.getAllProjects();\n        this.presentToast('Sprint created!', 'success');\n      })\n    }\n    else {\n      this.sprintService.putSprint(form.value.ID, form.value).subscribe(data => {\n        this.resetForm(form);\n        this.sprintService.getAllSprints();\n        this.projectService.getAllProjects();\n        this.presentToast('Sprint updated!', 'success');\n      })\n    }\n  }\n\n  compareFn(e1, e2): boolean {\n    return e1 && e2 ? e1.id === e2.id : e1 === e2;\n  }\n\n}\n"],"sourceRoot":""}