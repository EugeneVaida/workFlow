{"version":3,"sources":["webpack:///./src/app/sprint/sprint.module.ts","webpack:///./src/app/sprint/sprint.page.html","webpack:///./src/app/sprint/sprint.page.scss","webpack:///./src/app/sprint/sprint.page.ts"],"names":[],"mappings":"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","file":"sprint-sprint-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SprintPage } from './sprint.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SprintPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SprintPage]\n})\nexport class SprintPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title class=\\\"blue\\\">Спринт</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-row justify-content-center>\\n    <ion-col align-self-center size-md=\\\"9\\\" size-lg=\\\"9\\\" size-xs=\\\"12\\\">\\n      <div>\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title>\\n              {{ sprint.name }}\\n              <ion-icon *ngIf=\\\"sprint.isDone\\\" color=\\\"success\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n            </ion-card-title>\\n            <ion-card-subtitle>\\n              <ion-button size=\\\"small\\\" color=\\\"primary\\\" (click)=\\\"showForEdit(sprint)\\\">\\n                <ion-ripple-effect></ion-ripple-effect>\\n                <ion-icon name=\\\"create\\\"></ion-icon>\\n                Редактировать\\n              </ion-button>\\n              <ion-button size=\\\"small\\\" color=\\\"medium\\\" (click)=\\\"onDelete(sprint.id)\\\">\\n                <ion-ripple-effect></ion-ripple-effect>\\n                <ion-icon name=\\\"trash\\\"></ion-icon>\\n                Удалить\\n              </ion-button>\\n              <br>\\n              <br>\\n              {{ sprint.startDate | date: \\\"dd/MM/yyyy\\\"}} - {{ sprint.endDate | date: \\\"dd/MM/yyyy\\\"}}\\n              <br>\\n              <br>\\n            </ion-card-subtitle>\\n          </ion-card-header>          \\n          <ion-card-content>\\n            {{ sprint.description }}\\n            <br>\\n            <br>\\n            <div *ngFor=\\\"let project of sprint.projects\\\">\\n              <ion-chip>\\n                <ion-label>{{ project.name }}</ion-label>\\n              </ion-chip>\\n            </div>\\n          </ion-card-content>          \\n        </ion-card>\\n      </div>\\n    </ion-col>\\n  </ion-row>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NwcmludC9zcHJpbnQucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Sprint } from '../shared/sprint.model';\nimport { SprintService } from '../shared/sprint.service';;\nimport { ToastController, IonContent } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProjectService } from '../shared/project.service';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-sprint',\n  templateUrl: './sprint.page.html',\n  styleUrls: ['./sprint.page.scss'],\n})\nexport class SprintPage implements OnInit {\n\n  private id: string;\n  public sprint: Sprint;\n  constructor(public sprintService: SprintService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public toastController: ToastController,\n    public alertController: AlertController,\n    public projectService: ProjectService) { }\n\n  ngOnInit() {\n    this.projectService.getAllProjects();\n  }\n\n  async presentToast(text, theme) {\n    const toast = await this.toastController.create({\n      message: text,\n      showCloseButton: true,\n      position: 'top',\n      closeButtonText: 'Done',\n      color: theme\n    });\n    toast.present();\n  }\n\n  ionViewWillEnter() {\n    this.id = this.route.snapshot.paramMap.get('id');\n    this.sprintService.returnSprintById(this.id).subscribe(data => {\n      this.sprint = data;\n      console.log(this.sprint);\n    });\n  }\n\n  showForEdit(spr: Sprint) {\n    this.sprintService.selectedSprint = Object.assign({}, spr);\n    this.router.navigate(['/sprintform']);\n  }\n  \n  async onDelete(id: number) {\n    const alert = await this.alertController.create({\n      header: 'Удаление',\n      message: 'Вы действительно хотите удалить проект?',\n      buttons: [\n        {\n          text: 'Отменить',\n          role: 'cancel',\n          cssClass: 'secondary'\n        }, {\n          text: 'Удалить',\n          handler: () => {\n            this.sprintService.deleteSprint(id)\n              .subscribe(x => {\n                this.sprintService.getAllSprints();\n                this.presentToast('Sprint deleted!', 'danger');\n                this.router.navigate(['/sprints']);\n              })\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n}\n"],"sourceRoot":""}