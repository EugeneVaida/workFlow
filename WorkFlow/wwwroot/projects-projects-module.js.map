{"version":3,"sources":["webpack:///./src/app/projects/projects.module.ts","webpack:///./src/app/projects/projects.page.html","webpack:///./src/app/projects/projects.page.scss","webpack:///./src/app/projects/projects.page.ts"],"names":[],"mappings":"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","file":"projects-projects-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProjectsPage } from './projects.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProjectsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProjectsPage]\n})\nexport class ProjectsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      <span class=\\\"blue\\\">Projects</span>\\n      \\n    </ion-title>    \\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding> \\n  <ion-spinner *ngIf=\\\"projectService.isLoad && tagService.isLoad && sprintService.isLoad\\\"></ion-spinner>\\n  <!-- <div class=\\\"row\\\" *ngIf=\\\"!projectService.isLoad && !tagService.isLoad && !sprintService.isLoad\\\">\\n    <div class=\\\"col s12 m4\\\">\\n      <form (ngSubmit)=\\\"onSubmit(projectForm)\\\" #projectForm=\\\"ngForm\\\">\\n        <ion-grid>\\n          <ion-row justify-content-center>\\n            <ion-col align-self-center size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n              <div text-center *ngIf=\\\"isMatch(['Manager'])\\\">                  \\n                <h4>Project form </h4>\\n              </div>\\n              <div padding>\\n                <input type=\\\"hidden\\\" name=\\\"ID\\\" #ID=\\\"ngModel\\\" [(ngModel)]=\\\"projectService.selectedProject.id\\\">\\n                <ion-item>\\n                  <ion-input type=\\\"text\\\" #name ngModel name=\\\"name\\\" [(ngModel)]=\\\"projectService.selectedProject.name\\\"\\n                    placeholder=\\\"Название\\\" required></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-datetime #startDate ngModel name=\\\"startDate\\\" placeholder=\\\"Начало\\\"\\n                    [(ngModel)]=\\\"projectService.selectedProject.startDate\\\" display-format=\\\"DD/MM/YYYY\\\"\\n                    picker-format=\\\"DD MM YYYY\\\"></ion-datetime>\\n                </ion-item>\\n\\n                <ion-item>\\n                  <ion-datetime #endDate ngModel name=\\\"endDate\\\" placeholder=\\\"Конец\\\"\\n                    [(ngModel)]=\\\"projectService.selectedProject.endDate\\\" display-format=\\\"DD/MM/YYYY\\\"\\n                    picker-format=\\\"DD MM YYYY\\\"></ion-datetime>\\n                </ion-item>\\n\\n                <ion-item>\\n                  <ion-textarea #description ngModel name=\\\"description\\\"\\n                    [(ngModel)]=\\\"projectService.selectedProject.description\\\" placeholder=\\\"Описание\\\" required>\\n                  </ion-textarea>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\">Выберите спринты</ion-label>\\n                  <ion-select #sprints ngModel name=\\\"sprints\\\" [(ngModel)]=\\\"projectService.selectedProject.sprints\\\"\\n                    multiple=\\\"true\\\" [compareWith]=\\\"compareFn\\\">\\n                    <ion-select-option *ngFor=\\\"let sprint of sprintService.sprintsList\\\" [value]=\\\"sprint\\\">\\n                      {{sprint.name}}\\n                    </ion-select-option>\\n                  </ion-select>\\n                </ion-item>\\n                <ion-item>\\n                  <ion-label position=\\\"floating\\\">Выберите теги</ion-label>\\n                  <ion-select #tags ngModel name=\\\"tags\\\" [(ngModel)]=\\\"projectService.selectedProject.tags\\\"\\n                    multiple=\\\"true\\\" [compareWith]=\\\"compareFn\\\">\\n                    <ion-select-option *ngFor=\\\"let tag of tagService.tagsList\\\" [value]=\\\"tag\\\">\\n                      {{tag.name}}\\n                    </ion-select-option>\\n                  </ion-select>\\n                </ion-item>\\n              </div>\\n              <div padding>\\n                <ion-button color=\\\"light\\\" size=\\\"default\\\" type=\\\"submit\\\" expand=\\\"block\\\">Create</ion-button>\\n                <ion-button color=\\\"dark\\\" size=\\\"default\\\" type=\\\"button\\\" expand=\\\"block\\\" (click)=\\\"resetForm(projectForm)\\\">\\n                  Reset\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </form>\\n    </div>\\n  </div> -->\\n  <ion-row justify-content-center>    \\n    <ion-col align-self-center size-md=\\\"4\\\" size-lg=\\\"4\\\" size-xs=\\\"12\\\">\\n      <div *ngFor=\\\"let project of projectService.projectsList\\\">\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title>{{ project.name }}</ion-card-title>\\n            <ion-card-subtitle>\\n              {{ project.startDate | date: \\\"dd/MM/yyyy\\\"}} - {{ project.endDate | date: \\\"dd/MM/yyyy\\\"}}\\n            </ion-card-subtitle>\\n          </ion-card-header>\\n\\n          <ion-card-content>\\n            {{ project.description }}\\n            <ion-list *ngFor=\\\"let sprint of project.sprints\\\">\\n              <ion-item-sliding>\\n                <ion-item-options side=\\\"start\\\">\\n                  <ion-item-option color=\\\"danger\\\" (click)=\\\"deleteSprint(sprint.id, project)\\\">Delete</ion-item-option>\\n                </ion-item-options>\\n                <ion-item>\\n                  <ion-label>{{ sprint.name }}</ion-label>\\n                  <ion-icon *ngIf=\\\"sprint.isDone\\\" color=\\\"tertiary\\\" name=\\\"checkmark-circle\\\"></ion-icon>\\n                </ion-item>\\n                <ion-item-options side=\\\"end\\\">\\n                  <ion-item-option color=\\\"warning\\\" (click)=\\\"markSprintAsDone(sprint.id, project.id)\\\">Done!\\n                  </ion-item-option>\\n                </ion-item-options>\\n              </ion-item-sliding>\\n            </ion-list>\\n\\n            <div *ngFor=\\\"let tag of project.tags\\\">\\n              <ion-chip [routerLink]=\\\"'/tag-projects/' + tag.id\\\" color=\\\"tertiary\\\">\\n                <ion-label  color=\\\"tertiary\\\">{{ tag.name }}</ion-label>\\n              </ion-chip>\\n            </div>\\n          </ion-card-content>\\n          <ion-item>\\n              \\n            <ion-button color=\\\"medium\\\" (click)=\\\"onDelete(project.id)\\\">\\n              <ion-ripple-effect></ion-ripple-effect>\\n              <ion-icon name=\\\"trash\\\" slot=\\\"start\\\"></ion-icon>\\n              Remove\\n            </ion-button>\\n            <ion-button color=\\\"light\\\" (click)=\\\"showForEdit(project)\\\">\\n              <ion-ripple-effect></ion-ripple-effect>\\n              <ion-icon name=\\\"create\\\" slot=\\\"start\\\"></ion-icon>\\n              Edit\\n            </ion-button>\\n            <ion-button color=\\\"primary\\\" [routerLink]=\\\"'/project/' + project.id\\\">\\n                <ion-ripple-effect></ion-ripple-effect>\\n                <ion-icon name=\\\"arrow-forward\\\" slot=\\\"start\\\"></ion-icon>\\n                Open\\n              </ion-button>\\n          </ion-item>\\n        </ion-card>\\n      </div>\\n    </ion-col>\\n  </ion-row>\\n</ion-content>\"","module.exports = \"ion-spinner {\\n  display: block;\\n  margin: 0 auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvamVjdHMvRDpcXHByb2plY3RzXFxXb3JrRmxvd0NsaWVudFxcV29ya0Zsb3cvc3JjXFxhcHBcXHByb2plY3RzXFxwcm9qZWN0cy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFjO0VBQ2QsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvamVjdHMvcHJvamVjdHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXNwaW5uZXIge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICB9Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ProjectService } from '../shared/project.service';\nimport { UserService } from '../shared/user.service';\nimport { Toast } from '@ionic-native/toast/ngx';\nimport { ToastController } from '@ionic/angular';\nimport { NgForm } from '@angular/forms';\nimport { Project } from '../shared/project.model';\nimport { SprintService } from '../shared/sprint.service';\nimport { TagService } from '../shared/tag.service'\nimport { Sprint } from '../shared/sprint.model';\nimport { IonContent } from '@ionic/angular';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.page.html',\n  styleUrls: ['./projects.page.scss'],\n})\nexport class ProjectsPage implements OnInit {\n  @ViewChild(IonContent) content: IonContent;\n  public unselectedSprints : Sprint[];\n  isLoading : boolean = true;\n  constructor(public projectService: ProjectService,\n    public sprintService : SprintService,\n    private toast: Toast,\n    private toastController: ToastController,\n    public tagService: TagService,\n    public userService: UserService) { }\n\n  ngOnInit() {\n    this.resetForm();\n    this.projectService.getAllProjects();\n    this.sprintService.getAllSprints();\n    this.tagService.getAllTags();\n    this.isLoading = false;\n  }\n\n  async presentToast(text, theme) {\n    const toast = await this.toastController.create({\n      message: text,\n      showCloseButton: true,\n      position: 'top',\n      closeButtonText: 'Done',\n      color: theme\n    });\n    toast.present();\n  }\n\n  isMatch(array){\n    return this.userService.roleMatch(array);\n  }\n\n  showForEdit(prj: Project) {\n    this.projectService.selectedProject = Object.assign({}, prj);    \n    this.ScrollToTop();\n  }\n\n  ScrollToTop(){\n    this.content.scrollToTop(800);\n  }\n\n  onDelete(id: number) {\n    if (confirm('Are you sure to delete this record ?') == true) {\n      this.projectService.deleteProject(id)\n        .subscribe(x => {\n          this.projectService.getAllProjects();\n          this.presentToast('Project deleted!', 'danger');\n        })\n    }\n  }\n\n  deleteSprint(sprintId : number, project : Project){\n    const index = project.sprints.findIndex(x => x.id == sprintId);\n    if (index > -1) {\n      project.sprints.splice(index, 1);\n    }\n    this.projectService.putProject(sprintId, project).subscribe(data =>{\n      this.presentToast('Sprint deleted!', 'danger');\n    });\n  }\n\n  markSprintAsDone(id: number){\n    this.sprintService.markSprintAsDone(id).subscribe(data => {\n      this.projectService.getAllProjects();\n      this.presentToast('Sprint done!', 'success');\n    });\n  }\n  \n  compareFn(e1, e2): boolean {\n    return e1 && e2 ? e1.id === e2.id : e1 === e2;\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.reset();\n    }\n    this.projectService.selectedProject = {\n      id: null,\n      name: '',\n      description: '',\n      startDate: '',\n      endDate: '',\n      sprints : [],\n      tags : []\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value.ID == null) {\n      this.projectService.postProject(form.value).subscribe(data => {\n        this.resetForm(form);\n        this.projectService.getAllProjects();\n        // this.toast.show(`New company add!`, '5000', 'center').subscribe(\n        //   toast => {\n        //     console.log(toast);\n        //   }\n        // );\n        this.presentToast('project created!', 'success');\n      })\n    }\n    else {\n      this.projectService.putProject(form.value.ID, form.value).subscribe(data => {\n        this.resetForm(form);\n        this.projectService.getAllProjects();\n        // this.toast.show(`Companies updated`, '5000', 'center').subscribe(\n        //   toast => {\n        //     this.presentToast('Project updated!', 'warning');\n        //   }\n        // );\n        this.presentToast('project updated!', 'success');\n      })\n    }\n  }\n\n}\n"],"sourceRoot":""}