{"version":3,"sources":["webpack:///./src/app/companies/companies.module.ts","webpack:///./src/app/companies/companies.page.html","webpack:///./src/app/companies/companies.page.scss","webpack:///./src/app/companies/companies.page.ts"],"names":[],"mappings":"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","file":"companies-companies-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CompaniesPage } from './companies.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CompaniesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CompaniesPage]\n})\nexport class CompaniesPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title><span class=\\\"blue\\\">Companies</span></ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s12 m4\\\">\\n      <form (ngSubmit)=\\\"onSubmit(companyForm)\\\" #companyForm=\\\"ngForm\\\">\\n        <ion-grid>\\n          <ion-row justify-content-center>\\n            <ion-col align-self-center size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\n              <div text-center>\\n                <h4>Company form</h4>\\n              </div>\\n              <div padding>\\n                <input type=\\\"hidden\\\" name=\\\"ID\\\" #ID=\\\"ngModel\\\" [(ngModel)]=\\\"companyService.selectedCompany.id\\\">\\n                <ion-item>\\n                  <ion-input type=\\\"text\\\" #name ngModel name=\\\"name\\\" [(ngModel)]=\\\"companyService.selectedCompany.name\\\"\\n                    placeholder=\\\"Название компании\\\" required></ion-input>\\n                </ion-item>\\n\\n                <ion-item>\\n                  <ion-input type=\\\"text\\\" #adress ngModel name=\\\"adress\\\"\\n                    [(ngModel)]=\\\"companyService.selectedCompany.adress\\\" placeholder=\\\"Адрес\\\" required></ion-input>\\n                </ion-item>\\n\\n                <ion-item>\\n                  <ion-input type=\\\"text\\\" #telephone ngModel name=\\\"telephone\\\"\\n                    [(ngModel)]=\\\"companyService.selectedCompany.telephone\\\" placeholder=\\\"Телефон\\\" required></ion-input>\\n                </ion-item>\\n              </div>\\n              <div padding>\\n                <ion-button size=\\\"small\\\" type=\\\"submit\\\" expand=\\\"block\\\">Create</ion-button>\\n                <ion-button size=\\\"small\\\" type=\\\"button\\\" expand=\\\"block\\\" (click)=\\\"resetForm(companyForm)\\\">Reset\\n                </ion-button>\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </form>\\n    </div>\\n  </div>\\n\\n\\n  <ion-row justify-content-center>\\n    <ion-col align-self-center size-md=\\\"4\\\" size-lg=\\\"4\\\" size-xs=\\\"12\\\">\\n      <div *ngFor=\\\"let company of companyService.companiesList\\\">\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title>{{ company.name }}</ion-card-title>\\n            <ion-card-subtitle>{{ company.adress }}</ion-card-subtitle>\\n          </ion-card-header>\\n\\n          <ion-card-content>\\n            {{ company.telephone }}\\n          </ion-card-content>\\n          <ion-item (click)=\\\"onDelete(company.id)\\\" class=\\\"activated\\\">\\n            <ion-icon name=\\\"trash\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label>Remove</ion-label>\\n          </ion-item>\\n\\n          <ion-item (click)=\\\"showForEdit(company)\\\">\\n            <ion-icon name=\\\"create\\\" slot=\\\"start\\\"></ion-icon>\\n            <ion-label>Edit</ion-label>\\n          </ion-item>\\n        </ion-card>\\n      </div>\\n    </ion-col>\\n  </ion-row>\\n\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBhbmllcy9jb21wYW5pZXMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { CompanyService } from '../shared/company.service';\nimport { UserService } from '../shared/user.service';\nimport { ToastController } from '@ionic/angular';\nimport { NgForm } from '@angular/forms';\nimport { Company } from '../shared/company.model';\n\n@Component({\n  selector: 'app-companies',\n  templateUrl: './companies.page.html',\n  styleUrls: ['./companies.page.scss'],\n  providers: [CompanyService]\n})\nexport class CompaniesPage implements OnInit {\n\n  constructor(\n    public companyService: CompanyService,\n    private toastController: ToastController,\n    public userService: UserService\n  ) { }\n\n  async presentToast(text, theme) {\n    const toast = await this.toastController.create({\n      message: text,\n      showCloseButton: true,\n      position: 'top',\n      closeButtonText: 'Done',\n      color : theme\n    });\n    toast.present();\n  }\n\n  ngOnInit() {\n    this.resetForm();\n    this.companyService.getAllCompanies();\n  }\n\n  showForEdit(cpm: Company) {\n    this.companyService.selectedCompany = Object.assign({}, cpm);\n  }\n \n \n  onDelete(id: number) {\n    if (confirm('Are you sure to delete this record ?') == true) {\n      this.companyService.deleteCompany(id)\n      .subscribe(x => {\n        this.companyService.getAllCompanies();\n        this.presentToast('Company deleted!', 'danger');\n      })\n    }\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.reset();\n    }\n    this.companyService.selectedCompany = {\n      id: null,\n      name: '',\n      adress: '',\n      telephone: ''\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value.ID == null) {\n      this.companyService.postCompany(form.value).subscribe(data => {\n        this.resetForm(form);\n        this.companyService.getAllCompanies();        \n        this.presentToast('Company created!', 'warning');\n      })\n    }\n    else {\n      this.companyService.putCompany(form.value.ID, form.value).subscribe(data => {\n        this.resetForm(form);\n        this.companyService.getAllCompanies();\n        this.presentToast('Company updated!', 'warning');\n      })\n    }\n  }\n\n}\n"],"sourceRoot":""}