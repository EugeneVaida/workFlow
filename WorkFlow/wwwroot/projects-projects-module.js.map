{"version":3,"sources":["webpack:///./src/app/projects/projects.module.ts","webpack:///./src/app/projects/projects.page.html","webpack:///./src/app/projects/projects.page.scss","webpack:///./src/app/projects/projects.page.ts"],"names":[],"mappings":"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","file":"projects-projects-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProjectsPage } from './projects.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProjectsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProjectsPage]\n})\nexport class ProjectsPageModule {}\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>\\r\\n      <span class=\\\"blue\\\">Проекты</span>          \\r\\n    </ion-title>\\r\\n    \\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n    <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\" edge slot=\\\"fixed\\\" (click)=\\\"createNew()\\\">\\r\\n        <ion-fab-button>\\r\\n          <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n        </ion-fab-button>\\r\\n      </ion-fab>\\r\\n  <ion-spinner *ngIf=\\\"projectService.isLoad && tagService.isLoad && sprintService.isLoad\\\"></ion-spinner>\\r\\n  <!-- <div class=\\\"row\\\" *ngIf=\\\"!projectService.isLoad && !tagService.isLoad && !sprintService.isLoad\\\">\\r\\n    <div class=\\\"col s12 m4\\\">\\r\\n      <form (ngSubmit)=\\\"onSubmit(projectForm)\\\" #projectForm=\\\"ngForm\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row justify-content-center>\\r\\n            <ion-col align-self-center size-md=\\\"6\\\" size-lg=\\\"5\\\" size-xs=\\\"12\\\">\\r\\n              <div text-center *ngIf=\\\"isMatch(['Manager'])\\\">                  \\r\\n                <h4>Project form </h4>\\r\\n              </div>\\r\\n              <div padding>\\r\\n                <input type=\\\"hidden\\\" name=\\\"ID\\\" #ID=\\\"ngModel\\\" [(ngModel)]=\\\"projectService.selectedProject.id\\\">\\r\\n                <ion-item>\\r\\n                  <ion-input type=\\\"text\\\" #name ngModel name=\\\"name\\\" [(ngModel)]=\\\"projectService.selectedProject.name\\\"\\r\\n                    placeholder=\\\"Название\\\" required></ion-input>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                  <ion-datetime #startDate ngModel name=\\\"startDate\\\" placeholder=\\\"Начало\\\"\\r\\n                    [(ngModel)]=\\\"projectService.selectedProject.startDate\\\" display-format=\\\"DD/MM/YYYY\\\"\\r\\n                    picker-format=\\\"DD MM YYYY\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-datetime #endDate ngModel name=\\\"endDate\\\" placeholder=\\\"Конец\\\"\\r\\n                    [(ngModel)]=\\\"projectService.selectedProject.endDate\\\" display-format=\\\"DD/MM/YYYY\\\"\\r\\n                    picker-format=\\\"DD MM YYYY\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-textarea #description ngModel name=\\\"description\\\"\\r\\n                    [(ngModel)]=\\\"projectService.selectedProject.description\\\" placeholder=\\\"Описание\\\" required>\\r\\n                  </ion-textarea>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Выберите спринты</ion-label>\\r\\n                  <ion-select #sprints ngModel name=\\\"sprints\\\" [(ngModel)]=\\\"projectService.selectedProject.sprints\\\"\\r\\n                    multiple=\\\"true\\\" [compareWith]=\\\"compareFn\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let sprint of sprintService.sprintsList\\\" [value]=\\\"sprint\\\">\\r\\n                      {{sprint.name}}\\r\\n                    </ion-select-option>\\r\\n                  </ion-select>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Выберите теги</ion-label>\\r\\n                  <ion-select #tags ngModel name=\\\"tags\\\" [(ngModel)]=\\\"projectService.selectedProject.tags\\\"\\r\\n                    multiple=\\\"true\\\" [compareWith]=\\\"compareFn\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let tag of tagService.tagsList\\\" [value]=\\\"tag\\\">\\r\\n                      {{tag.name}}\\r\\n                    </ion-select-option>\\r\\n                  </ion-select>\\r\\n                </ion-item>\\r\\n              </div>\\r\\n              <div padding>\\r\\n                <ion-button color=\\\"light\\\" size=\\\"default\\\" type=\\\"submit\\\" expand=\\\"block\\\">Create</ion-button>\\r\\n                <ion-button color=\\\"dark\\\" size=\\\"default\\\" type=\\\"button\\\" expand=\\\"block\\\" (click)=\\\"resetForm(projectForm)\\\">\\r\\n                  Reset\\r\\n                </ion-button>\\r\\n              </div>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div> -->\\r\\n  <br>\\r\\n  <ion-searchbar (ionInput)=\\\"search($event)\\\" placeholder=\\\"Поиск\\\"></ion-searchbar>\\r\\n  <ion-grid>\\r\\n    <ion-row justify-content-center>\\r\\n      <ion-col align-self-center size-md=\\\"4\\\" size-lg=\\\"4\\\" size-xs=\\\"12\\\"\\r\\n        *ngFor=\\\"let project of projectService.projectsList\\\">\\r\\n        <div>\\r\\n          <ion-card color=\\\"light shade\\\">\\r\\n            <ion-card-header>\\r\\n              <ion-card-title>{{ project.name }}</ion-card-title>\\r\\n              <ion-card-subtitle>\\r\\n                {{ project.startDate | date: \\\"dd/MM/yyyy\\\"}} - {{ project.endDate | date: \\\"dd/MM/yyyy\\\"}}\\r\\n              </ion-card-subtitle>\\r\\n            </ion-card-header>\\r\\n\\r\\n            <ion-card-content>  \\r\\n              <span *ngFor=\\\"let tag of project.tags\\\">\\r\\n                <ion-chip [routerLink]=\\\"'/tag-projects/' + tag.id\\\" color=\\\"tertiary\\\">\\r\\n                  <ion-label color=\\\"tertiary\\\">{{ tag.name }}</ion-label>\\r\\n                </ion-chip>\\r\\n              </span>\\r\\n              <br>\\r\\n              <ion-button color=\\\"primary\\\" [routerLink]=\\\"'/project/' + project.id\\\">\\r\\n                <ion-ripple-effect></ion-ripple-effect>\\r\\n                <ion-icon name=\\\"arrow-forward\\\" slot=\\\"start\\\"></ion-icon>\\r\\n                Открыть\\r\\n              </ion-button>              \\r\\n            </ion-card-content>\\r\\n          </ion-card>\\r\\n        </div>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\"","module.exports = \"ion-spinner {\\n  display: block;\\n  margin: 0 auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvamVjdHMvRDpcXHByb2plY3RzXFxXb3JrRmxvd0NsaWVudFxcd29ya0Zsb3cvc3JjXFxhcHBcXHByb2plY3RzXFxwcm9qZWN0cy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFjO0VBQ2QsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvamVjdHMvcHJvamVjdHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXNwaW5uZXIge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICB9Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ProjectService } from '../shared/project.service';\r\nimport { UserService } from '../shared/user.service';\r\nimport { Toast } from '@ionic-native/toast/ngx';\r\nimport { ToastController } from '@ionic/angular';\r\nimport { Project } from '../shared/project.model';\r\nimport { SprintService } from '../shared/sprint.service';\r\nimport { TagService } from '../shared/tag.service'\r\nimport { Sprint } from '../shared/sprint.model';\r\nimport { IonContent } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.page.html',\r\n  styleUrls: ['./projects.page.scss'],\r\n})\r\nexport class ProjectsPage implements OnInit {\r\n  @ViewChild(IonContent) content: IonContent;\r\n  public unselectedSprints : Sprint[];\r\n  isLoading : boolean = true;\r\n  constructor(public projectService: ProjectService,\r\n    public sprintService : SprintService,\r\n    private toast: Toast,\r\n    private toastController: ToastController,\r\n    public tagService: TagService,\r\n    public userService: UserService,\r\n    public router: Router) { }\r\n\r\n  ngOnInit() {    \r\n    this.projectService.getAllProjects();\r\n    this.sprintService.getAllSprints();\r\n    this.tagService.getAllTags();\r\n    this.isLoading = false;\r\n  }\r\n\r\n  async presentToast(text, theme) {\r\n    const toast = await this.toastController.create({\r\n      message: text,\r\n      showCloseButton: true,\r\n      duration: 2000,\r\n      position: 'top',\r\n      closeButtonText: 'Done',\r\n      color: theme\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  isMatch(array){\r\n    return this.userService.roleMatch(array);\r\n  }\r\n\r\n  showForEdit(prj: Project) {\r\n    this.projectService.selectedProject = Object.assign({}, prj);    \r\n    this.ScrollToTop();\r\n  }\r\n\r\n  ScrollToTop(){\r\n    this.content.scrollToTop(800);\r\n  }\r\n\r\n  onDelete(id: number) {\r\n    if (confirm('Are you sure to delete this record ?') == true) {\r\n      this.projectService.deleteProject(id)\r\n        .subscribe(x => {\r\n          this.projectService.getAllProjects();\r\n          this.presentToast('Project deleted!', 'danger');\r\n        })\r\n    }\r\n  }\r\n\r\n  deleteSprint(sprintId : number, project : Project){\r\n    const index = project.sprints.findIndex(x => x.id == sprintId);\r\n    if (index > -1) {\r\n      project.sprints.splice(index, 1);\r\n    }\r\n    this.projectService.putProject(sprintId, project).subscribe(data =>{\r\n      this.presentToast('Sprint deleted!', 'danger');\r\n    });\r\n  }\r\n\r\n  markSprintAsDone(id: number){\r\n    this.sprintService.markSprintAsDone(id).subscribe(data => {\r\n      this.projectService.getAllProjects();\r\n      this.presentToast('Sprint done!', 'success');\r\n    });\r\n  }\r\n  \r\n\r\n  search(ev: any){\r\n    const val = ev.target.value;\r\n    if (val && val.trim() != '') {\r\n      this.projectService.searchProjects(val);\r\n    }else{\r\n      this.projectService.getAllProjects();\r\n    }\r\n  }  \r\n\r\n  createNew(){\r\n    this.projectService.selectedProject = {\r\n      id: null,\r\n      name: '',\r\n      description: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      sprints : [],\r\n      tags : []\r\n    }\r\n    this.router.navigateByUrl(`/projectform`);   \r\n  }\r\n\r\n  \r\n\r\n}\r\n"],"sourceRoot":""}